version: 2.1

orbs:
  secret-injector: bestsellerit/secret-injector@0.2.34

commands:
  goreleaser:
    parameters:
      release-type:
        type: string
    steps:
      # - run:
      #     name: Install GoReleaser
      #     command: |
      #       curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh
      #       sudo mv ./bin/goreleaser /usr/bin/goreleaser
      #       rm -rf ./bin
      - run:
          name: Import private key
          command: |
            source /tmp/secrets.env
            apk add gnupg
            echo -e "$GPG_PRIVATE_KEY" | base64 -d > $HOME/private.key
            gpg --pinentry-mode loopback --batch --yes --import $HOME/private.key
      - run:
          name: Run GoReleaser
          command: |
            source /tmp/secrets.env
            if [ "<< parameters.release-type >>" = "test" ] ; then
              goreleaser release --snapshot --rm-dist
            else
              goreleaser release --rm-dist
            fi


jobs:
  build:
    parameters:
      release-type:
        type: enum
        enum: ["test", "release"]
        default: "test"
    docker:
      - image: goreleaser/goreleaser #circleci/golang:1.15
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - goreleaser:
          release-type: << parameters.release-type >>

  acceptance_test:
    docker:
      - image: cimg/go:1.17
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run:
          name: Performaning Acceptance Test
          command: |
            source /tmp/secrets.env
            TF_ACC=1 go test -v ./... -count=1 -tags=external_auth

  spellchecker:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - run:
          name: Install code spell
          command: |
            pip install codespell
      - run:
          name: Checking for spelling missing in documentation
          command: |
            codespell ./docs   

tag_filter: &tag_filter /v[0-9]+.[0-9]+.[0-9]+/
my_context: &my_context es02-prod

dump_secrets: &dump_secrets
  vault-path: ES/terraform-provider/prod
  output-type: env

dump_secrets_acctest: &dump_secrets_acctest
  vault-path: ES/terraform-provider/harbor/accTest
  output-type: env

test_filter: &test_filter
  filters:
    tags:
      ignore: *tag_filter
release_filter: &release_filter
  filters:
    branches:
      ignore: /.*/
    tags:
      only: *tag_filter

workflows:
  version: 2
  spellchecker:
    jobs:
      - spellchecker:
          <<: *test_filter
  acceptance_test:
    jobs:
      - secret-injector/dump-secrets:
          <<: *dump_secrets_acctest
          # context: *my_context
          <<: *test_filter
      - acceptance_test:
          requires:
            - secret-injector/dump-secrets
          <<: *test_filter
  tester:
    jobs:
      - secret-injector/dump-secrets:
          <<: *dump_secrets
          # context: *my_context
          <<: *test_filter
      - build:
          release-type: test
          name: test
          requires:
            - secret-injector/dump-secrets
          <<: *test_filter
  build-n-release:
    jobs:
      - secret-injector/dump-secrets:
          <<: *dump_secrets
          # context: *my_context
          <<: *release_filter
      - build:
          name: build
          release-type: release
          requires:
            - secret-injector/dump-secrets
          <<: *release_filter
          
