---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "harbor_robot_account Resource - terraform-provider-harbor"
subcategory: ""
description: |-
  
---

{{/* This template serves as a starting point for documentation generation, and can be customized with hardcoded values and/or doc gen templates.

For example, the {{ .SchemaMarkdown }} template can be used to replace manual schema documentation if descriptions of schema attributes are added in the provider source code. */ -}}

# harbor_robot_account (Resource)

<!-- schema generated by tfplugindocs -->

## Example Usage

### System Level
Introduced in harbor 2.2.0, system level robot accounts can have basically [all available permissions](https://github.com/goharbor/harbor/blob/-/src/common/rbac/const.go) in harbor and are not dependent on a single project.

### Global

{{tffile "examples/resources/harbor_robot_account/resource.tf"}}

The above example, creates a system level robot account with permissions to
- permission to create labels on system level
- pull repository across all projects
- push repository to project "my-project-name"

### Project

Other than system level robot accounts, project level robot accounts can interact on project level only.
The [available permissions](https://github.com/goharbor/harbor/blob/-/src/common/rbac/const.go) are mostly the same as for system level robots.

{{tffile "examples/resources/harbor_robot_account/project.tf"}}

The above example creates a project level robot account with permissions to
- pull repository on project "main"
- push repository on project "main"

## Schema

### Required

- `level` (String) Level of the robot account, currently either `system` or `project`.
- `name` (String) The name of the project that will be created in harbor.
- `permissions` (Block Set, Min: 1) (see [below for nested schema](#nestedblock--permissions))

### Optional

- `description` (String) The description of the robot account will be displayed in harbor.
- `disable` (Boolean) Disables the robot account when set to `true`.
- `duration` (Number) By default, the robot account will not expire. Set it to the amount of days until the account should expire.
- `secret` (String, Sensitive) The secret of the robot account used for authentication. Defaults to random generated string from Harbor.

### Read-Only

- `full_name` (String)
- `id` (String) The ID of this resource.
- `robot_id` (String)

<a id="nestedblock--permissions"></a>

### Nested Schema for `permissions`

Required:

- `access` (Block Set, Min: 1) (see [below for nested schema](#nestedblock--permissions--access))
- `kind` (String) Either `system` or `project`.
- `namespace` (String) namespace is the name of your project. For kind `system` permissions, always use `/` as namespace. Use `*` to match all projects. 

<a id="nestedblock--permissions--access"></a>

### Nested Schema for `permissions.access`

Required:

- `action` (String) Eg. `push`, `pull`, `read`, etc. Check [available actions](https://github.com/goharbor/harbor/blob/-/src/common/rbac/const.go).
- `resource` (String) Eg. `repository`, `labels`, etc. Check [available resources](https://github.com/goharbor/harbor/blob/-/src/common/rbac/const.go).

Optional:

- `effect` (String) Either `allow` or `deny`. Defaults to `allow`.

## Import
Import is supported using the following syntax with the `robot_account` `id`:

```shell
terraform import harbor_robot_account.system /robots/123
```
